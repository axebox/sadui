@import "sadui/sadui";

// Load all components
@import "sadui/components";

// Or, load each individually
// @import "sadui/components/#{component_name}";

// Sample dependencies
@import "susy";
@import "normalize";

// Local conf
$container: 760px;
$margin: 20px;
$linkColor: blue;

/* Grid */
$container-style: magic;
// $container-width: 100%;
$debugging-grid: false;

$total-columns  : 12;             // a 12-column grid
$column-width   : 4em;            // each column is 4em wide
$gutter-width   : 1em;            // 1em gutters between columns
$grid-padding   : $margin;  // grid-padding equal to gutters


// SADUI Theme Conf
$sadui_margin: $margin;

@import "sadui/themes";

html, html body, body {
    background-color: $colorBlack;
}

.wrapper {
    width: $container;
    margin: ($margin * 15) auto $margin;
    padding: $margin;
    z-index: $zTemplate;
    position: relative;
    background-color: rgba($colorBlack, 0.75);
}

.hero {
    width: 100%;
    position: absolute;
    z-index: $zHell;
    top: 0;
    img {
        width: 100%;
        height: auto;
    }
}

#header {
    color: $colorWhite;
    h1 {}
}

#main {
    color: $colorWhite;

    section {
        margin-top: $margin;
        border-top: 1px solid darken(tan, 20);
        &:first-child {
            margin-top: 0;
            border-top: 0 none;
        }
    }
    a {
        color: $linkColor;
        text-decoration: none;
    }
}

/* Views */

.pretty-dropdown-view {
    .pretty-dropdown {
        margin-left: $margin;
        &:first-of-type {
            margin-left: 0;
        }
    }
}

.loader-view {
    .loader-example {

        ul, li {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        li {
            @include inline-block;
            width: 160px;
            margin-left: $margin;
            &:first-child {
                margin-left: 0;
            }
        }
        img {
            width: 100%;
            height: auto;
        }
    }
}

.modal--sm {
    @extend .modal;
}

%carousel-example {
    .carousel-navigation-item-back,
    .carousel-navigation-item-forward {
    }

    .carousel-navigation-item-back {
        float: left;
    }

    .carousel-navigation-item-forward {
        float: right;
    }
}

.carousel--example-base {
    @extend .carousel;
    @extend %carousel-example;
}

// This example uses susy percentage based grids
.carousel--example-fluid {

    // @include container;
    
    // The percentage width of the carousel item. For fluid carousels, this is usually handled by the grid.
    $carouselItemWidth: space(3,12);

    // The maximum number of carousel items possible (set to a lower number to limit amount of generated css)
    $carouselMaxItems: 24;

    @extend .carousel;
    @extend %carousel-example;

    .carousel-content-item {
        width: columns(3,12);
        margin-right: gutter(12);

        img {
            width: 100%;
            height: auto;
        }
    }

    .carousel-content {
        @for $i from 0 through $carouselMaxItems {
            @if $i != 0 {
                &.is-selected-item-#{$i} {
                    @include translate3d(-($carouselItemWidth * $i), 0);
                }
            }
        }
    }
}

.carousel--example-background {
    @extend .carousel;
    @extend %carousel-example;
}

.carousel--example-vertical {
    @extend .carousel;
    @extend %carousel-example;
}

